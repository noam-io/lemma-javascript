function MessageBuilder(e){this.lemma_id=e}function EventFilter(){this.callbacks={}}function MessageHandler(e){this.tcpReader=new TcpReader(function(t){var n=(new MessageParser).parse(t);"event"==n[0]&&e.handle(n[2],n[3])})}function EventSender(e,t){this.systemVersion="1.0",this.webSocket=e,this.builder=t}function Lemma(e,t,n){this.connected=!1,this.lemmaId=e,this.desiredRoom=t,"DEBUG"==n&&(this.debugMode=!0),this.messageBuilder=new MessageBuilder(this.lemmaId),this.eventFilter=new EventFilter,this.messageHandler=new MessageHandler(this.eventFilter)}MessageBuilder.prototype.event=function(e,t){var n=[];return n.push("event"),n.push(this.lemma_id),n.push(e),n.push(t),JSON.stringify(n)},MessageBuilder.prototype.register=function(e,t,n,s){var r=[];return r.push("register"),r.push(this.lemma_id),r.push(0),r.push(t),r.push(e),r.push(n),r.push(s),JSON.stringify(r)},MessageBuilder.prototype.marco=function(e){var t=[];return t.push("marco"),t.push(this.lemma_id),t.push(e),t.push("node.js"),t.push("1.1"),JSON.stringify(t)},"undefined"!=typeof module&&module.exports&&(module.exports=MessageBuilder),EventFilter.prototype.add=function(e,t){void 0===this.callbacks[e]&&(this.callbacks[e]=[]),this.callbacks[e].push(t)},EventFilter.prototype.handle=function(e,t){var n=this.callbacks[e];void 0!==n&&n.forEach(function(n){n(e,t)})},EventFilter.prototype.events=function(){return Object.keys(this.callbacks)},"undefined"!=typeof module&&module.exports&&(module.exports=EventFilter);var isNode=!1;if("undefined"!=typeof module&&module.exports){var TcpReader=require("./TcpReader"),MessageParser=require("./MessageParser");isNode=!0}MessageHandler.prototype.receive=function(e){this.tcpReader.read(e)},isNode&&(module.exports=MessageHandler),EventSender.prototype.sendEvent=function(e,t){this.sendMessage(this.builder.event(e,t))},EventSender.prototype.sendRegister=function(e,t){this.sendMessage(this.builder.register(e,t,"web",this.systemVersion))},EventSender.prototype.sendMessage=function(e){this.webSocket.send(this.zeroPad(e.length,6)+e)},EventSender.prototype.zeroPad=function(e,t){return new Array(t+1-e.toString().length).join("0")+e},"undefined"!=typeof module&&module.exports&&(module.exports=EventSender);var isNode=!1,debugMode=!1;if("undefined"!=typeof module&&module.exports){isNode=!0;var EventFilter=require("./EventFilter"),MessageBuilder=require("./MessageBuilder"),MessageHandler=require("./MessageHandler"),EventSender=require("./EventSender"),WebSocket=require("ws")}Lemma.prototype.debug=function(e){this.debugMode&&console.log(e)},Lemma.prototype.isConnected=function(){return!!this.connected},Lemma.prototype.begin=function(e,t){var n=this,s=new WebSocket("ws://"+e+":"+t.toString()+"/websocket");n.sender=new EventSender(s,this.messageBuilder),s.onmessage=function(e){n.messageHandler.receive(e.data)},s.onclose=function(){n.connected=!1,n.debug("socket closed"),n.sender=null,n.onDisconnectCallback&&n.onDisconnectCallback()},s.onopen=function(){n.debug("connected..."),n.sender.sendRegister([],n.eventFilter.events()),n.connected=!0},s.onerror=function(e){n.connected=!1,n.debug("Web socket Error"),n.debug(e),n.sender=null,n.onDisconnectCallback&&n.onDisconnectCallback()}},Lemma.prototype.hears=function(e,t){this.eventFilter.add(e,t)},Lemma.prototype.sendEvent=function(e,t){if(this.sender)try{this.sender.sendEvent(e,t)}catch(n){this.debug("Error trying to send: "+n),this.sender=null,this.onDisconnectCallback&&this.onDisconnectCallback()}else this.debug("You must 'begin' the lemma before sending a message")},isNode&&(module.exports=Lemma);