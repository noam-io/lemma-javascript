function EventFilter(){this.callbacks={}}function EventSender(a,b){this.systemVersion="1.0",this.webSocket=a,this.builder=b}function Lemma(a,b,c){this.connected=!1,this.lemmaId=a,this.desiredRoom=b,"DEBUG"==c&&(this.debugMode=!0),this.messageBuilder=new MessageBuilder(this.lemmaId),this.eventFilter=new EventFilter,this.messageHandler=new MessageHandler(this.eventFilter)}function MessageBuilder(a){this.lemma_id=a}function MessageHandler(a){this.tcpReader=new TcpReader(function(b){var c=(new MessageParser).parse(b);"event"==c[0]&&a.handle(c[2],c[3])})}function MessageParser(){}function ServerLocator(a){this.lemma=a,this.lemma.onDisconnectCallback=this.beginLocating.bind(this),this.broadcastHost="255.255.255.255",this.broadcastPort=1030,this.dialect="node.js",this.protocolVersion="2",this.webSocketPort=8089}function TcpReader(a){this.callback=a,this.buffer=""}EventFilter.prototype.add=function(a,b){void 0===this.callbacks[a]&&(this.callbacks[a]=[]),this.callbacks[a].push(b)},EventFilter.prototype.handle=function(a,b){var c=this.callbacks[a];void 0!==c&&c.forEach(function(c){c(a,b)})},EventFilter.prototype.events=function(){return Object.keys(this.callbacks)},"undefined"!=typeof module&&module.exports&&(module.exports=EventFilter),EventSender.prototype.sendEvent=function(a,b){this.sendMessage(this.builder.event(a,b))},EventSender.prototype.sendRegister=function(a,b){this.sendMessage(this.builder.register(a,b,"web",this.systemVersion))},EventSender.prototype.sendMessage=function(a){this.webSocket.send(this.zeroPad(a.length,6)+a)},EventSender.prototype.zeroPad=function(a,b){return new Array(b+1-a.toString().length).join("0")+a},"undefined"!=typeof module&&module.exports&&(module.exports=EventSender);var isNode=!1,debugMode=!1;if("undefined"!=typeof module&&module.exports){isNode=!0;var EventFilter=require("./EventFilter"),MessageBuilder=require("./MessageBuilder"),MessageHandler=require("./MessageHandler"),EventSender=require("./EventSender"),WebSocket=require("ws")}Lemma.prototype.debug=function(a){this.debugMode&&console.log(a)},Lemma.prototype.isConnected=function(){return!!this.connected},Lemma.prototype.begin=function(a,b){var c=this,d=new WebSocket("ws://"+a+":"+b.toString()+"/websocket");c.sender=new EventSender(d,this.messageBuilder),d.onmessage=function(a){c.messageHandler.receive(a.data)},d.onclose=function(){c.connected=!1,c.debug("socket closed"),c.sender=null,c.onDisconnectCallback&&c.onDisconnectCallback()},d.onopen=function(){c.debug("connected..."),c.sender.sendRegister([],c.eventFilter.events()),c.connected=!0},d.onerror=function(a){c.connected=!1,c.debug("Web socket Error"),c.debug(a),c.sender=null,c.onDisconnectCallback&&c.onDisconnectCallback()}},Lemma.prototype.hears=function(a,b){this.eventFilter.add(a,b)},Lemma.prototype.sendEvent=function(a,b){if(this.sender)try{this.sender.sendEvent(a,b)}catch(c){this.debug("Error trying to send: "+c),this.sender=null,this.onDisconnectCallback&&this.onDisconnectCallback()}else this.debug("You must 'begin' the lemma before sending a message")},isNode&&(module.exports=Lemma),MessageBuilder.prototype.event=function(a,b){var c=[];return c.push("event"),c.push(this.lemma_id),c.push(a),c.push(b),JSON.stringify(c)},MessageBuilder.prototype.register=function(a,b,c,d){var e=[];return e.push("register"),e.push(this.lemma_id),e.push(0),e.push(b),e.push(a),e.push(c),e.push(d),JSON.stringify(e)},MessageBuilder.prototype.marco=function(a){var b=[];return b.push("marco"),b.push(this.lemma_id),b.push(a),b.push("node.js"),b.push("1.1"),JSON.stringify(b)},"undefined"!=typeof module&&module.exports&&(module.exports=MessageBuilder);var isNode=!1;if("undefined"!=typeof module&&module.exports){var TcpReader=require("./TcpReader"),MessageParser=require("./MessageParser");isNode=!0}MessageHandler.prototype.receive=function(a){this.tcpReader.read(a)},isNode&&(module.exports=MessageHandler),MessageParser.prototype.parse=function(a){try{return JSON.parse(a)}catch(b){return console.log("Error Parsing badly formed JSON: "+a),console.log(b),[]}},"undefined"!=typeof module&&module.exports&&(module.exports=MessageParser);var isNode=!1,debugMode=!1;if("undefined"!=typeof module&&module.exports){isNode=!0;var Datagram=require("dgram"),MessageBuilder=require("./MessageBuilder"),MessageParser=require("./MessageParser")}Function.prototype.bind||(Function.prototype.bind=function(a){if("function"!=typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var b=Array.prototype.slice.call(arguments,1),c=this,d=function(){},e=function(){return c.apply(this instanceof d&&a?this:a,b.concat(Array.prototype.slice.call(arguments)))};return d.prototype=this.prototype,e.prototype=new d,e}),ServerLocator.prototype.beginLocating=function(){var a=this,b=this.lemma,c=b.desiredRoom,d=new MessageBuilder(b.lemmaId).marco(c||""),e=Datagram.createSocket("udp4");e.on("error",function(a){b.debug("udp error:\n"+a.stack),e.close()}),e.on("message",function(c,d){if(!b.isConnected()){var e=(new MessageParser).parse(c);"polo"===e[0]&&(b.debug("got polo from "+d.address+":"+d.port+" - "+c),b.begin(d.address,a.webSocketPort))}}),e.on("listening",function(){var a=e.address();b.debug("udp listening "+a.address+":"+a.port)}),e.bind(function(){e.setBroadcast(!0)});var f=function(){if(!b.isConnected()){var c=function(){b.debug("sent marco: "+d),setTimeout(f,1e3)};e.send(new Buffer(d),0,d.length,a.broadcastPort,a.broadcastHost,c)}};setTimeout(f,1e3)},isNode&&(module.exports=ServerLocator),TcpReader.prototype.read=function(a){this.buffer=this.buffer.concat(a);for(var b=this.payloadSize(this.buffer);b>0&&this.buffer.length>=6+b;)this.consumeOne(b),b=this.payloadSize(this.buffer)},TcpReader.prototype.payloadSize=function(a){return this.buffer.length>=6?parseInt(a.slice(0,6),10):-1},TcpReader.prototype.consumeOne=function(a){var b=6,c=6+a;this.callback(this.buffer.slice(b,c)),this.buffer=this.buffer.slice(c,this.buffer.length)},"undefined"!=typeof module&&module.exports&&(module.exports=TcpReader);